{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10068123,"sourceType":"datasetVersion","datasetId":6205262}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-01T14:46:03.733091Z","iopub.execute_input":"2024-12-01T14:46:03.733613Z","iopub.status.idle":"2024-12-01T14:46:04.999969Z","shell.execute_reply.started":"2024-12-01T14:46:03.733574Z","shell.execute_reply":"2024-12-01T14:46:04.998622Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/datasetda/DA.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/datasetda/DA.csv\")\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-01T14:46:30.038405Z","iopub.execute_input":"2024-12-01T14:46:30.038806Z","iopub.status.idle":"2024-12-01T14:46:30.060395Z","shell.execute_reply.started":"2024-12-01T14:46:30.038768Z","shell.execute_reply":"2024-12-01T14:46:30.059313Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   ID        Date  Expenses ExpensesCategory\n0   1  01/12/0000     10000           Profit\n1   2  02/12/0000     20000           Profit\n2   3  03/12/0000      5000   Not For Profit\n3   4  04/12/0000      1000            Proft\n4   5  05/12/0000     50000           Profit","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Date</th>\n      <th>Expenses</th>\n      <th>ExpensesCategory</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>01/12/0000</td>\n      <td>10000</td>\n      <td>Profit</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>02/12/0000</td>\n      <td>20000</td>\n      <td>Profit</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>03/12/0000</td>\n      <td>5000</td>\n      <td>Not For Profit</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>04/12/0000</td>\n      <td>1000</td>\n      <td>Proft</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>05/12/0000</td>\n      <td>50000</td>\n      <td>Profit</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3}]}